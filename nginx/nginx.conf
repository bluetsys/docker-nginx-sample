worker_processes 4;

events { worker_connections 1024; }

http {

  upstream node-app {
    # 아무것도 없으면 가중치에 해당하는 서버로 접속
    #least_conn                     # 가장 접속이 적은 서버로 전달.
    #ip_hash                        # 동일 사용자(요청자)에 대하여 같은 업스트림 서버로 연결되도록 한다.
    #hash $request_uri consistent;  # $값에 해당하는 값을 해쉬화 해서 분산 시킨다.

    #weight=n         # 서버 가중치. 만약 5라면 1로 설정한 서버에 비하여 5배 더 자주 선택된다.
    #max_fails=n      # 설정한 값 n만큼 실패가 발생하면 서버가 죽은 것으로 간주한다.
    #fail_timeout=n   # max_fails 가 설정된 상태에서 n 시간만큼 응답하지 않으면 죽은 것으로 간주한다.

    #down             # 해당 서버를 사용하지 않는다. ip_hash 옵션이 설정된 경우에만 유효.
    #backup           # 대기하고 있다가 설정된 모든 서버가 동작하지 않을 때 사용되는 서버.

    server 172.17.0.1:3001 weight=1 max_fails=1 fail_timeout=1s;
    server 172.17.0.1:3002 weight=1 max_fails=1 fail_timeout=1s;
    server 172.17.0.1:3003 weight=1 max_fails=1 fail_timeout=1s;

    #server app-01:3000 weight=1 max_fails=1 fail_timeout=1s;
    #server app-02:3000 weight=1 max_fails=1 fail_timeout=1s;
    #server app-03:3000 weight=1 max_fails=1 fail_timeout=1s;
    #server app-04:3000 weight=1 max_fails=1 fail_timeout=1s;
    #server app-05:3000 weight=1 max_fails=1 fail_timeout=1s;
    #server app-06:3000 weight=1 max_fails=1 fail_timeout=1s;
    #server app-07:3000 weight=1 max_fails=1 fail_timeout=1s;
    #server app-08:3000 weight=1 max_fails=1 fail_timeout=1s;
    #server app-09:3000 weight=1 max_fails=1 fail_timeout=1s;
    #server app-10:3000 weight=1 max_fails=1 fail_timeout=1s;
  }

  server {
    listen 80;

    location / {
      proxy_pass http://node-app;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }
  }
}




#http://dht.space/posts/2016/07/01/nginx-proxy-settings/
#server {
#    listen       80;
#    server_name  dht.space;
#    # 여기에는 기존 dht.space 서버 세팅들이 들어가 있음.
#    location /other/ {
#        rewrite ^/other(/.*)$ $1 break; # url에서 other 뒤에 있는 URL을 전부 그대로 사용.
#        proxy_pass http://other;
#        proxy_set_header X-Real-IP $remote_addr; # 실제 접속자의 IP를 X-Real-IP 헤더에 입혀서 전송.
#        proxy_redirect off;
#    }
#}
#upstream other {
#    server 111.11.11.11:80;
#    server 111.11.11.12:80;
#}